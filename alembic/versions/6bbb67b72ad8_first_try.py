"""first try

Revision ID: 6bbb67b72ad8
Revises:
Create Date: 2025-06-15 00:07:45.866818

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6bbb67b72ad8'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    op.create_table('material_categories',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
    )
    op.create_table('material_subcategories',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('material_category_id', sa.Integer(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'),
                  nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'),
                  nullable=False),
        sa.ForeignKeyConstraint(['material_category_id'], ['material_categories.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
    )
    op.create_table('material_standard_names',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'),
                  nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'),
                  nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
    )


    op.create_table('material_descriptions',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('group', sa.String(), nullable=True),
        sa.Column('material_standard_name_id', sa.Integer(), nullable=False),
        sa.Column('material_category_id', sa.Integer(), nullable=False),
        sa.Column('material_subcategory_id', sa.Integer(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(['material_category_id'], ['material_categories.id'], ),
        sa.ForeignKeyConstraint(['material_standard_name_id'], ['material_standard_names.id'], ),
        sa.ForeignKeyConstraint(['material_subcategory_id'], ['material_subcategories.id'], ),
        # sa.ForeignKeyConstraint(['microstructure_id'], ['microstructures.id'], ),
        sa.PrimaryKeyConstraint('id')
    )

    op.create_table('microstructures',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('grain_size', sa.Float(), nullable=False),
        sa.Column('crystal_structure', sa.String(), nullable=False),
        sa.Column('dislocation_density', sa.Float(), nullable=False),
        sa.Column('image_file', sa.String(), nullable=True),  # TODO: Change to appropriate type for image storage
        sa.Column('material_description_id', sa.Integer(), nullable=True),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'),
                  nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'),
                  nullable=False),
        sa.ForeignKeyConstraint(['material_description_id'], ['material_descriptions.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
    )

    op.create_table('chemical_compositions',
        sa.Column('source', sa.String(), nullable=False),
        sa.Column('material_description_id', sa.Integer(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'),
                  nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'),
                  nullable=False),
        sa.ForeignKeyConstraint(['material_description_id'], ['material_descriptions.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table('chemical_elements',
        sa.Column('symbol', sa.String(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'),
                  nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'),
                  nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('symbol')
    )

    op.create_table('alloy_content',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('percentage', sa.Float(), nullable=False),
        sa.Column('chemical_composition_id', sa.Integer(), nullable=False),
        sa.Column('chemical_element_id', sa.Integer(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'),
                  nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'),
                  nullable=False),
        sa.ForeignKeyConstraint(['chemical_composition_id'], ['chemical_compositions.id'], ),
        sa.ForeignKeyConstraint(['chemical_element_id'], ['chemical_elements.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
    )
    op.create_table('material_parameter_names',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('unit', sa.String(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
    )

    op.create_table('material_parameters',
        sa.Column('value', sa.String(), nullable=False),
        sa.Column('commentary', sa.String(), nullable=True),
        sa.Column('material_description_id', sa.Integer(), nullable=False),
        sa.Column('material_parameter_name_id', sa.Integer(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'),
                  nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'),
                  nullable=False),
        sa.ForeignKeyConstraint(['material_description_id'], ['material_descriptions.id'], ),
        sa.ForeignKeyConstraint(['material_parameter_name_id'], ['material_parameter_names.id'], ),
        sa.PrimaryKeyConstraint('id')
    )





    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('alloy_content')
    op.drop_table('chemical_compositions')
    op.drop_table('chemical_elements')
    op.drop_table('material_parameters')
    op.drop_table('material_parameter_names')
    op.drop_table('microstructures')
    op.drop_table('material_descriptions')
    op.drop_table('material_subcategories')
    op.drop_table('material_categories')
    op.drop_table('material_standard_names')
    # ### end Alembic commands ###
